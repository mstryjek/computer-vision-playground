COMMON:                     ## Common values that apply to all modules 
  SHAPE: [600, 800]         ## Image shape (h, w) [uint, uint]

IO:                         ## Config for image input/output
  CAPTURE: videos/cat.mp4   ## Camera index or video path [uint | str]
  IMAGE_PATH: images        ## Path to images when processing image files only [str]
  SAVE_PATH: output         ## Path to save directory, either absolute or relative [str]
  SAVE_PREFIX: test_video   ## Prefix to add to base output video filename [str]
  VIDEO_SAVE_FORMAT: 'mp4'  ## Save format for stream writing, one of `ImageIO` video formats [str]
  IMAGE_SAVE_FORMAT: 'png'  ## Save format for screenshots, one of `ImageIO` image formats [str]
  FPS: 30                   ## Frames per second [uint]

VISUALIZATION:              ## Config for image visualizer
  WINDOW_NAME: 'Processing' ## OpenCV window name [str]
  KEYS:                     ## Key bindings for program control. Key values should not repeat, as it may lead to unpredictable behavior [Dict[str, char]]
    INSPECT: 'c'            ## Key to press to inspect intermediate image [char]
    EXIT: 'q'               ## Key to press to quit out of program [char]
    CONTINUE: 'd'           ## Key to press to go to next processing step [char]
    BACK: 'a'               ## Key to press to go to previous processing step [char]
    SCREENSHOT: 's'         ## Key to press to save current processing step (only in inspect mode) [char]
    RESTORE: 'r'            ## Key to press to reset zoom state to 1x
    ZOOM_IN: '='            ## Key to press to increase zoom by 1x
    ZOOM_OUT: '-'           ## Key to press to decrease zoom by 1x
  FRAME_BY_FRAME: True      ## Whether to go frame-by-frame when not in inspect mode
  MAX_ZOOM: 30              ## Maximum zoom, as 1/fraction of image height [uint]
  COLOR: [255,213,0]        ## Color to draw masks with, in BGR [Tuple[int, int, int]]
  ALPHA: 1.00               ## Opacity factor for drawing [float]
  PIXEL_LABEL_OFFSET: 10    ## Offset (both x and y) of pixel label from mouse cursor, in px [uint]
  PIXEL_LABEL_BORDER: 2     ## Border thickness (both x and y) for the pixel label, to ensure better contrast with surrondings, given in pixels [uint]
  BOUNDING_BOX_COLOR: 150   ## Pixel value for drawing bounding box around the currently inspected contour [uint8]
  TEXT:
    MARGIN: 4               ## Margin for items in textbox, in px [uint]
    SPACING: 6              ## Vertical spacing between lines to make the label more readable, in pixels [uint]
    SCALE: 0.5              ## Scale of text for textbox [float]
    COLOR: [255, 255, 255]  ## Text color, in BGR [Tuple[uint8, uint8, uint8]]
    BG_COLOR: [130,130,130] ## Textbox background color, in BGR [Tuple[uint8, uint8, uint8]]
    CONTRAST_THRESH: 180    ## Value below which label text will be white, above => black [uint]


PROCESSING:                 ## Config for image processing
  BLOB_AREA_THRESH: 200     ## Minimum blob area to be kept as valid, in pixels [uint]
  HOLE_AREA_THRESH: 50      ## Minimum area for holes to be kept [uint]
  BG_PERC_THRESH: 0.6       ## Percentage of pixels that have to be white in an image to be considered having white background [float]
  BLUR_SIZE: 3              ## Blur kernel size for gaussian blurring [uint | Tuple[uint, uint]]
  THRESHOLD: 160            ## Threshold value for binary thresholding [uint]
  EROSION:                  ## Arguments for erosion [Dict[str, uint | Tuple[uint, uint]]]
    KERNEL_SIZE: 7          ## Kernel size to use for the morphology operation [uint | Tuple[uint, uint]]
    ITERATIONS: 5           ## Number of iterations for the morphology op [uint]
  DILATION:                 ## Arguments for dilation [Dict[str, uint | Tuple[uint, uint]]]
    KERNEL_SIZE: 5          ## Kernel size to use for the morphology operation [uint | Tuple[uint, uint]]
    ITERATIONS: 4           ## Number of iterations for the morphology op [uint]
  CLOSING:                  ## Arguments for closing [Dict[str, uint | Tuple[uint, uint]]]
    KERNEL_SIZE: 7          ## Kernel size to use for the morphology operation [uint | Tuple[uint, uint]]
    ITERATIONS: 5           ## Number of iterations for the morphology op [uint]
  OPENING:                  ## Arguments for opening [Dict[str, uint | Tuple[uint, uint]]]
    KERNEL_SIZE: 3          ## Kernel size to use for the morphology operation [uint | Tuple[uint, uint]]
    ITERATIONS: 15          ## Number of iterations for the morphology op [uint]
  WARP:                     ## Arguments for warping [Dict[str, Tuple[uint, uint]]]
    TARGET_SHAPE: [280,160] ## Taget shape to warp to (h, w) [Tuple[uint, uint]]
  CROP:
    PERC_X: 0.25
    PERC_Y: 0.25
  ASPECT_RATIO_THRESH: 1.4  ## Threshold for v/h aspect ratio [float]